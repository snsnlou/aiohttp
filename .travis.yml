version: = 0
sudo: false
language: python
python:
- 3.5
- 3.6
- 3.7-dev
- nightly
- pypy3.5
install:
- pip install --upgrade pip wheel setuptools
- pip install -r requirements/cython.txt
- pip install -r requirements/ci.txt
_helpers:
- python: 3.6
- env: &id001 []
  before_install: skip
  install: skip
  script: skip
  after_success: &id002 []
- python: 3.6
  env: *id001
  before_install: skip
  install:
  - pip install --upgrade pip wheel setuptools
  - pip install -U -r requirements/ci.txt
  script: skip
  after_success: *id002
  stage: docs, linting and pre-test checks
- python: 3.6
  env: *id001
  before_install: skip
  install: &id009
  - pip install --upgrade pip wheel setuptools
  - pip install -U -r requirements/doc.txt -r requirements/doc-spelling.txt
  script: skip
  after_success: *id002
  stage: docs, linting and pre-test checks
  after_failure: cat docs/_build/spelling/output.txt
  addons: &id010
    apt:
      packages:
      - libenchant-dev
- stage: test under OS X (last chance to fail before deploy available)
  os: osx
  language: generic
  python: pypy3.5
  env:
  - PYTHON_VERSION=pypy3.5-5.10.0
  - PYENV_ROOT="$HOME/.pyenv"
  - PATH="$PYENV_ROOT/bin:$PATH"
  before_install: &id003
  - brew update
  - brew install pyenv || brew upgrade pyenv
  - 'eval "$(pyenv init -)"

    eval "$(pyenv virtualenv-init -)"

    '
  - pyenv install --skip-existing --keep --verbose "$PYTHON_VERSION"
  - pyenv shell "$PYTHON_VERSION"
  - python --version
  before_cache: &id004
  - brew --cache
- python: 3.6
  stage: deploy (PYPI upload itself runs only for tagged commits)
  deploy:
    provider: pypi
    skip_cleanup: true
    skip-existing: true
    user: aio-libs-bot
    password: &id005
      secure: bWF8GkGmjxfisMx+LqOmZgf9EXPT4yBMhiIbN+rU5gs53PJJyn1r287c5zEijnIHlpQaJVwWJ9ZFl1n34y37P1yvhlz0M6esr5K10B9fJ6nkUoAivtOWARcHLQ3bC+WGC/V9S0v0pZ11qFuSNzJzFZqfRabRw0H8muVWGhuBuYp97EdJWCdSNpXqsj2Ts8ytPMYv+5m3iPgXq833svFbWRjZ+HgX8HwvF2lo+ej+tsFJNACbQmj+eQDGlWQZzP2s4/3grHivd2retpqfW1cYgZaZX68/UB2ghsCtkxhcNpGaM8I/n3udAHkPSqz3MC2FJL0RdkyvQ8UZkcmcisQxz0voQM25995BHGWktwpDh7BxFtGJishXV7hiFz9zVOZLM9u5AzIO4hoN770SsZDewWdhzowXPYT8DXiHVg+roEkszg8FeBmisx1cw34CK9H0iLUSQ9EF2vuz8T4bqEpbT6Fyta90wZTvJ7GpJ4yXJXR6VAvLgiX4zXeFdx/4aViz3UzkDJ06qieRuZJWfQ9u2lDxJfqHEVy5IxM5iACagP1XayJiVIN0uFRxNElxTlCMope6ICCOu9fhcGnF15XNw5YpFPYYvph3JU1vC8cYw7ypg8LQGryp1fNM9SXWaGTiV+J/yvsynFiXX6QiyGOwSBIJ9XjZEfRd8i9HaGHw2cw=
    true: &id006
      tags: true
      all_branches: true
- stage: deploy (PYPI upload itself runs only for tagged commits)
  os: osx
  language: generic
  python: 3.6
  env:
  - Build and deploy to PYPI of OS X 10.11 binary wheel=
  - PYTHON_VERSION=3.6.3
  - PYENV_ROOT="$HOME/.pyenv"
  - PATH="$PYENV_ROOT/bin:$PATH"
  before_install: *id003
  before_cache: *id004
  deploy: &id007
    provider: pypi
    skip_cleanup: false
    skip-existing: true
    user: aio-libs-bot
    password: *id005
    true: *id006
    distributions: bdist_wheel
  osx_image: xcode7.3
  script: skip
  after_success: &id008 []
- stage: deploy (PYPI upload itself runs only for tagged commits)
  os: osx
  language: generic
  python: 3.6
  env:
  - Build and deploy to PYPI of OS X 10.12 binary wheel=
  - PYTHON_VERSION=3.6.3
  - PYENV_ROOT="$HOME/.pyenv"
  - PATH="$PYENV_ROOT/bin:$PATH"
  before_install: *id003
  before_cache: *id004
  deploy: *id007
  osx_image: xcode8.1
  script: skip
  after_success: *id008
- stage: deploy (PYPI upload itself runs only for tagged commits)
  os: osx
  language: generic
  python: 3.6
  env:
  - Build and deploy to PYPI of OS X 10.10 binary wheel=
  - PYTHON_VERSION=3.6.3
  - PYENV_ROOT="$HOME/.pyenv"
  - PATH="$PYENV_ROOT/bin:$PATH"
  before_install: *id003
  before_cache: *id004
  deploy: *id007
  osx_image: xcode6.4
  script: skip
  after_success: *id008
os: linux
jobs:
  fast_finish: true
  include:
  - python: 3.7
    dist: xenial
    sudo: required
  - python: 3.6
    env:
    - TARGET=docs
    before_install: skip
    install: *id009
    script:
    - make doc-spelling
    after_success: *id002
    stage: docs, linting and pre-test checks
    after_failure: cat docs/_build/spelling/output.txt
    addons: *id010
  - python: 3.6
    env:
    - TARGET=towncrier
    before_install: skip
    install:
    - pip install --upgrade pip wheel setuptools
    - pip install -r requirements/cython.txt
    - pip install -r requirements/ci.txt
    - pip install -r requirements/towncrier.txt
    script:
    - towncrier --yes
    after_success: *id002
    stage: docs, linting and pre-test checks
    after_failure: cat docs/_build/spelling/output.txt
    addons: *id010
  - python: 3.6
    env:
    - TARGET=flake8
    before_install: skip
    install:
    - pip install --upgrade pip wheel setuptools
    - pip install -r requirements/flake.txt
    script:
    - flake8 aiohttp examples tests
    after_success: *id002
    stage: docs, linting and pre-test checks
  - python: 3.6
    env:
    - TARGET="'dist setup check'"
    before_install: skip
    install:
    - pip install --upgrade pip wheel setuptools
    - pip install -r requirements/cython.txt
    - pip install -r requirements/ci.txt -r requirements/doc.txt
    script:
    - python setup.py check --metadata --restructuredtext --strict --verbose
    after_success: *id002
    stage: docs, linting and pre-test checks
  - stage: test under OS X (last chance to fail before deploy available)
    os: osx
    language: generic
    python: 3.5.3
    env:
    - PYTHON_VERSION=3.5.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
  - stage: test under OS X (last chance to fail before deploy available)
    os: osx
    language: generic
    python: 3.6
    env:
    - PYTHON_VERSION=3.6.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
  - stage: test under OS X (last chance to fail before deploy available)
    os: osx
    language: generic
    python: 3.6
    env:
    - PYTHON_VERSION=3.6-dev
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
  - stage: test under OS X (last chance to fail before deploy available)
    os: osx
    language: generic
    python: 3.7
    env:
    - PYTHON_VERSION=3.7.0
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
  - python: 3.6
    stage: deploy (PYPI upload itself runs only for tagged commits)
    deploy:
      provider: pypi
      skip_cleanup: true
      skip-existing: true
      user: aio-libs-bot
      password: *id005
      true: *id006
    env: Build and deploy to PYPI of manylinux1 binary wheels for all supported Pythons
      and source distribution=
    before_install: skip
    install: skip
    script:
    - ./tools/run_docker.sh "aiohttp"
    - pip install -r requirements/cython.txt
    - pip install -r requirements/ci.txt
    after_success: *id002
    dist: trusty
    group: edge
    services:
    - docker
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.5
    env:
    - Build and deploy to PYPI of OS X 10.10 binary wheel=
    - PYTHON_VERSION=3.5.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode6.4
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.6
    env:
    - Build and deploy to PYPI of OS X 10.10 binary wheel=
    - PYTHON_VERSION=3.6.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode6.4
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.6
    env:
    - Build and deploy to PYPI of OS X 10.10 binary wheel=
    - PYTHON_VERSION=3.7.0
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode6.4
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.5
    env:
    - Build and deploy to PYPI of OS X 10.11 binary wheel=
    - PYTHON_VERSION=3.5.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode7.3
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.6
    env:
    - Build and deploy to PYPI of OS X 10.11 binary wheel=
    - PYTHON_VERSION=3.6.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode7.3
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.6
    env:
    - Build and deploy to PYPI of OS X 10.11 binary wheel=
    - PYTHON_VERSION=3.7.0
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode7.3
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.5
    env:
    - Build and deploy to PYPI of OS X 10.12 binary wheel=
    - PYTHON_VERSION=3.5.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode8.1
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.6
    env:
    - Build and deploy to PYPI of OS X 10.12 binary wheel=
    - PYTHON_VERSION=3.6.3
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode8.1
    script: skip
    after_success: *id008
  - stage: deploy (PYPI upload itself runs only for tagged commits)
    os: osx
    language: generic
    python: 3.6
    env:
    - Build and deploy to PYPI of OS X 10.12 binary wheel=
    - PYTHON_VERSION=3.7.0
    - PYENV_ROOT="$HOME/.pyenv"
    - PATH="$PYENV_ROOT/bin:$PATH"
    before_install: *id003
    before_cache: *id004
    deploy: *id007
    osx_image: xcode8.1
    script: skip
    after_success: *id008
stages:
- docs, linting and pre-test checks
- test
- name: test under OS X (last chance to fail before deploy available)
  if: type IN (api, cron)
- name: deploy (PYPI upload itself runs only for tagged commits)
  if: tag IS present
cache: pip
before_script:
- bash test_mypy.sh
before_install:
- openssl aes-256-cbc -K $MY_KEY -iv $MY_IV -in root_key.enc -out root_key -d
script:
- echo "SCRIPT SECTION"
